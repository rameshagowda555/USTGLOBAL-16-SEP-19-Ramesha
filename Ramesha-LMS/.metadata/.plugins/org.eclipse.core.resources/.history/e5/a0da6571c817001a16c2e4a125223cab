package com.ustglobal.librarymanagementsystem.controller;

import java.util.Arrays;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.ustglobal.librarymanagementsystem.dto.AdminResponse;
import com.ustglobal.librarymanagementsystem.dto.BookBean;
import com.ustglobal.librarymanagementsystem.dto.StudentBean;
import com.ustglobal.librarymanagementsystem.dto.StudentResponse;
import com.ustglobal.librarymanagementsystem.service.StudentService;

@RestController
public class StudentController {
	
	@Autowired
	private StudentService service;
	
	@GetMapping(path="/login-student",produces = MediaType.APPLICATION_JSON_VALUE)
	public StudentResponse studentLogin(@RequestParam("studentId")int studentId,@RequestParam("studentPassword")String studentPassword) {
		StudentResponse response = new StudentResponse();
		StudentBean bean = service.studentLogin(studentId, studentPassword);
		if(bean!= null) {
			response.setStatusCode(201);
			response.setMessage("Success");
			response.setDescription("Student Login Successfully");
		}else {
			response.setStatusCode(401);
			response.setMessage("Failure");
			response.setDescription("Student Not Able To Login");
		}
		return response;
	}
	
	
	@GetMapping(path="/search-book/{bookName}",produces = MediaType.APPLICATION_JSON_VALUE)
	public StudentResponse searchBookByName(@PathVariable("bookName")String bookName) {
		StudentResponse response = new StudentResponse();
		BookBean bean = service.searchBookByName(bookName);
		
		if(bean!=null) {
			response.setStatusCode(201);
			response.setMessage("Success");
			response.setDescription("Book is Available in the Library");
			response.setBookBean(Arrays.asList(bean));//in the list it store only one result
			
		}else {
			response.setStatusCode(401);
			response.setMessage("Failure");
			response.setDescription("Book is Not Available in the Library ");	
		}
		return response;
	}
}
